{"version":3,"sources":["assets/img.jpg","fonts/BeVietNam.ttf","layouts/styledApp.js","components/PostCard/styledPostCard.js","utilities/index.js","components/PostCard/index.js","pages/Home/ListPost.js","components/SideBar/index.js","pages/Home/index.js","pages/About/index.js","hooks/usePost.js","components/Post/styledPostCard.js","components/Post/index.js","pages/Post/index.js","router/index.js","layouts/ThemeContext.js","layouts/index.js","serviceWorker.js","index.js"],"names":["module","exports","styled","div","filtersTitles","title","PostCard","date","str","fields","options","renderText","text","split","flatMap","i","key","className","to","category","titleUrl","join","charAt","toUpperCase","slice","createDate","moment","locale","format","alt","image","src","file","url","documentToReactComponents","content","client","contentful","space","accessToken","cat","useState","contents","setContents","useEffect","getEntries","content_type","then","data","Promise","resolve","catch","error","reject","getPost","PostCardList","items","map","index","isHomePage","length","Er404","StyledSideBar","SideBar","require","style","color","textAlign","href","StyledHome","Home","param","useParams","Helmet","name","rel","property","ListPost","StyledAbout","About","usePost","post","setPost","a","order","total","Post","renderNode","BLOCKS","EMBEDDED_ASSET","node","target","BlogPost","console","log","c","Posts","Router","exact","path","component","ThemeContext","createContext","ThemeContextProvider","state","lightTheme","toggleTheme","setState","islightTheme","children","this","props","Provider","value","Component","DropdownNavKeyframes","keyframes","UnDropdownNavKeyframes","library","add","fab","faSearch","faBars","styledDropDown","DropDownAnimation","DropUpAnimation","NavigateList","App","isDropDown","setDropDown","DropDownAni","setDropDownAni","isPickCat","window","location","pathname","indexOf","NavigateComp","item","icon","onClick","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fea55758.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.2f69cd7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BeVietNam.bd27b3ec.ttf\";","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  header {\r\n    font-family: \"beVietNam\", serif;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    .mobile-navbar {\r\n      display: none;\r\n      &-dropdown {\r\n        display: none;\r\n      }\r\n    }\r\n    .logo {\r\n      font-size: 6.5em;\r\n      letter-spacing: 0.08em;\r\n      color: black;\r\n    }\r\n    @media only screen and (max-width: 800px) {\r\n      .mobile-navbar {\r\n        font-family: \"beVietNam\", serif;\r\n        display: flex !important;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin: 0;\r\n        span {\r\n          color: #333;\r\n          font-size: 14px;\r\n          font-weight: 700;\r\n          letter-spacing: 0.08em;\r\n          display: block;\r\n          margin: 18px 0 10px;\r\n          padding: 3px;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n          -webkit-transition: color 0.2s ease;\r\n          transition: color 0.2s ease;\r\n        }\r\n        span:hover {\r\n          color: #e13d3d;\r\n        }\r\n        &-dropdown {\r\n          height: 0px;\r\n          overflow: hidden;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n          a {\r\n            margin: 5px 0 5px 5px;\r\n            color: #333;\r\n            font-size: 14px;\r\n            font-weight: 700;\r\n            letter-spacing: 0.08em;\r\n            display: block;\r\n            text-decoration: none;\r\n            cursor: pointer;\r\n            -webkit-transition: color 0.2s ease;\r\n            transition: color 0.2s ease;\r\n          }\r\n          a:hover {\r\n            color: #e13d3d;\r\n          }\r\n        }\r\n      }\r\n      .logo {\r\n        font-size: 9vw !important;\r\n      }\r\n      .navbar {\r\n        display: none !important;\r\n\r\n        a:hover {\r\n          color: #e13d3d;\r\n        }\r\n      }\r\n    }\r\n    .navbar {\r\n      font-family: \"beVietNam\", serif;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      a {\r\n        color: #333;\r\n        font-size: 14px;\r\n        font-weight: 700;\r\n        letter-spacing: 0.08em;\r\n        display: block;\r\n        margin: 18px 0 10px;\r\n        padding: 3px;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n        -webkit-transition: color 0.2s ease;\r\n        transition: color 0.2s ease;\r\n      }\r\n      a:hover {\r\n        color: #e13d3d;\r\n      }\r\n    }\r\n    .border {\r\n      border-bottom: 0.25px solid #e13d3d;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    letter-spacing: 0.03em;\r\n    &-cat {\r\n      color: #d03b39;\r\n      opacity: 0.7;\r\n      text-align: center;\r\n    }\r\n    &-title {\r\n      text-align: center;\r\n      align-self: center;\r\n      font-family: beVietNam, serif;\r\n      font-size: 45px;\r\n      font-weight: 400;\r\n      width: fit-content;\r\n      color: black;\r\n    }\r\n    &-content {\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n      letter-spacing: -0.01em;\r\n      font-family: beVietNam;\r\n      -webkit-font-smoothing: antialiased;\r\n    }\r\n    &-date {\r\n      text-align: center;\r\n      font-size: 13px;\r\n      line-height: 30px;\r\n      letter-spacing: 0.08em;\r\n    }\r\n    p {\r\n    }\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .card-content-img {\r\n      width: 100%;\r\n    }\r\n    .card-title {\r\n      line-height: 40px;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n","export default function filtersTitles(title) {\r\n  switch (title) {\r\n    case \"Life\":\r\n      return \"Nhảm nhí\";\r\n    case \"Movie\":\r\n      return \"Phim ảnh\";\r\n    default:\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport StyledPostCard from \"./styledPostCard\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport filtersTitles from \"../../utilities/index.js\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport 'moment/locale/vi';\r\n\r\nconst PostCard = ({ fields }) => {\r\n  const formatTime = date => moment(date).locale('vi').format(\"DD/MM/YYYY HH:mm\");\r\n\r\n  const options = {\r\n    // Render image\r\n    // renderNode: {\r\n    //   [BLOCKS.EMBEDDED_ASSET]: node => {\r\n    //     // console.log(node)\r\n    //     let { title, file } = node.data.target.fields\r\n    //     // console.log(file[\"en-US\"].url)\r\n    //     return <img src={file.url}/>\r\n    //   },\r\n    // },\r\n    renderText: text =>\r\n      text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br key={i} />, text])\r\n  };\r\n\r\n  // const renderContent = (listContent) => {\r\n  //   const data = documentToReactComponents(listContent,options)\r\n  //   return data\r\n  // }\r\n\r\n  function removeAccents(str) {\r\n    return str.split(\" \").join(\"-\");\r\n  }\r\n  // const url = () => {\r\n  //   window.encodeURI( )\r\n  // }\r\n\r\n  return (\r\n    <StyledPostCard className=\"mb-40\">\r\n      <div className=\"card\">\r\n        <Link\r\n          className=\"card-title\"\r\n          to={`/${fields.category}/${removeAccents(fields.titleUrl)}`}\r\n        >\r\n          {fields.title}\r\n        </Link>\r\n        <b className=\"card-cat regular\">\r\n          {filtersTitles(\r\n            fields.category.charAt(0).toUpperCase() + fields.category.slice(1)\r\n          )}\r\n        </b>\r\n        <span className=\"card-date small mb-10\">\r\n          {formatTime(fields.createDate)}\r\n        </span>\r\n        <img\r\n          className=\"mb-20\"\r\n          alt={fields.image.fields.title}\r\n          src={fields.image.fields.file.url}\r\n        ></img>\r\n        <div className=\"card-content\">\r\n          {documentToReactComponents(fields.content, options)}\r\n        </div>\r\n        {/* <a className=\"mt-20 small\">đọc thêm></a> */}\r\n        {/* <div className=\"card-footer mt-40\">footer</div> */}\r\n      </div>\r\n    </StyledPostCard>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as contentful from \"contentful\";\r\nimport PostCard from \"../../components/PostCard/\";\r\nimport \"./listpost.scss\";\r\n\r\nconst Er404 = (contents) => (\r\n  <div className=\"text-progress\">\r\n   {contents==='error' ? 'Hừm.. có vẻ chúng ta đang offline' : ((contents.items || []).length === 0) ?  \"Chưa có gì ở đây hết cậu ơi :<\" : \"Đợi tớ tìm content tí :>\"} \r\n    {/* <img class=\"meow1\" alt=\"meow\" src={require(\"../../assets/meow1.png\")} />{\" \"}\r\n    <img class=\"meow2\" alt=\"meow\" src={require(\"../../assets/meow2.png\")} /> */}\r\n  </div>\r\n);\r\n\r\nconst client = contentful.createClient({\r\n  space: \"zttx8n98lc3r\",\r\n  accessToken: \"AGjnCQHwzRIWOr7e9-kn8PLMMd0cWnRCXRjiNl_YHrY\"\r\n});\r\n\r\n// const getPost = cat => {\r\n//   return new Promise(resolve => {\r\n//     client\r\n//       .getEntries({\r\n//         // order: \"sys.updatedAt\",\r\n//         content_type: \"blogPost\",\r\n//         \"fields.category\": cat\r\n//       })\r\n//       .then(data => resolve(data));\r\n//   });\r\n// };\r\nconst getPost = cat => {\r\n  return client\r\n    .getEntries({\r\n      // order: \"sys.updatedAt\",\r\n      content_type: \"blogPost\",\r\n      \"fields.category\": cat\r\n    })\r\n    .then(data => Promise.resolve(data)).catch(error => Promise.reject(error))\r\n};\r\n\r\nexport default ({ cat }) => {\r\n  const [contents, setContents] = useState(\"beforeloading\");\r\n\r\n  useEffect(() => {\r\n    getPost(cat).then(data => setContents(data)).catch(error => setContents('error'))\r\n  }, [cat]);\r\n\r\n  const PostCardList = (contents.items || []).map((content, index) => {\r\n    return (\r\n      <div key={index} className=\"mb-40\">\r\n        <PostCard isHomePage={cat === \"\"} {...content} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if ((contents.items || []).length !== 0) return PostCardList;\r\n  else if (contents !== \"beforeloading\") return Er404(contents);\r\n  return <div className=\"text-progress\">Đợi tớ tìm content tí :></div>;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSideBar = styled.div`\r\n  background: white;\r\n  font-family: beVietNam, serif;\r\n  img {\r\n    width: 100%;\r\n  }\r\n  .sidebar-wrapper {\r\n    padding: 20px;\r\n  }\r\n  .title {\r\n    text-align: center;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    margin-bottom: 20px;\r\n  }\r\n  .social-links {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    margin: 20px 20px 20px 20px;\r\n    .facebook:hover {\r\n      color: #3578e5;\r\n    }\r\n    .linkedin:hover {\r\n      color: #0077b5;\r\n    }\r\n    .instagram:hover {\r\n      color: #c1c1be;\r\n    }\r\n    a {\r\n      color: #000;\r\n      padding: 0px 20px;\r\n    }\r\n    a:not(:last-child) {\r\n      border-right: 1px solid #000;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <StyledSideBar className=\"about-me\">\r\n      <img alt='Nhã \"Hirant\" Lý' src={require(\"../../assets/img.jpg\")} />\r\n      <div className=\"sidebar-wrapper\">\r\n        <div className=\"title\">\r\n          Chào, mình là <b style={{ color: \"#e13d3d\" }}>Nhã</b>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div>\r\n            Đây là nơi chứa mấy thứ nhảm nhí của mình.\r\n            <br /> <br />\r\n            {/* <div style={{textAlign:'center'}}> */}\r\n            <div  style={{ textAlign: \"center\" }}>\r\n              Indie Song &nbsp;&nbsp; Phim ảnh&nbsp;&nbsp;\r\n              <br />\r\n            </div>\r\n            <div  style={{ textAlign: \"center\" }}>\r\n              Front-end Web &nbsp;&nbsp; UI/UX\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n          <div>\r\n            {\" \"}\r\n            <br />\r\n            Hiện tại ở đây vẫn chưa hoàn thiện mà cũng không có mấy content, nên\r\n            nếu hứng thú với những cái ở trên hay mấy bài viết thì liên lạc với\r\n            mình ha :>\r\n          </div>\r\n          <div className=\"social-links\">\r\n            <a\r\n              className=\"facebook\"\r\n              href=\"https://www.facebook.com/Hirantinsleep\"\r\n            >\r\n              <i className=\"fab fa-facebook-f\"></i>\r\n            </a>\r\n            <a\r\n              className=\"linkedin\"\r\n              href=\"https://www.linkedin.com/in/nh%C3%A3-l%C3%BD-980879138/  \"\r\n            >\r\n              <i className=\"fab fa-linkedin\"></i>\r\n            </a>\r\n            <a className=\"instagram\" href=\"https://www.instagram.com/_hirant_/\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledSideBar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\n// import \"./home.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ListPost from \"./ListPost\";\r\nimport SideBar from \"../../components/SideBar/index\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst StyledHome = styled.div`\r\n  .main {\r\n    display: flex;\r\n    justify-content: center;\r\n    .posts {\r\n      width: 65%;\r\n    }\r\n    .about-content {\r\n      display: none;\r\n    }\r\n    @media only screen and (max-width: 800px) {\r\n      .about-content {\r\n        display: none;\r\n      }\r\n      .posts {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .text-progress {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    letter-spacing: 0.08em;\r\n    text-align: center;\r\n    margin-top: 100px;\r\n  }\r\n`;\r\n\r\nexport default Home => {\r\n  let param = useParams();\r\n  return (\r\n    <StyledHome>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Lorem ipsum\" />\r\n        <meta\r\n          name=\"robots\"\r\n          content=\"max-snippet:-1, max-image-preview:large, max-video-preview:-1\"\r\n        />\r\n        <link rel=\"canonical\" href=\"https://hirany.netlify.com\" />\r\n        <meta property=\"og:locale\" content=\"en_US\" />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={`${\r\n          param.cat\r\n            ? `${param.cat.charAt(0).toUpperCase() + param.cat.slice(1)} | `\r\n            : \"\"\r\n        }A little Hirany`} />\r\n        <meta property=\"og:description\" content={\"Chào, mình là Nhã aka Hirant. Đây là nơi chưa mấy thứ nhảm nhí của mình\"} />\r\n        <meta property=\"og:url\" content=\"https://hirany.netlify.com\" />\r\n        <meta property=\"og:site_name\" content=\"A little Hirany\" />\r\n        <meta property=\"og:image:width\" content=\"1280\" />\r\n        <meta property=\"og:image:height\" content=\"720\" />\r\n      </Helmet>\r\n      <div className=\"main\">\r\n        <div className=\"posts\">\r\n          <ListPost cat={param.cat || \"\"} />\r\n        </div>\r\n        <div className=\"about-content\">\r\n          <SideBar />\r\n        </div>\r\n      </div>\r\n    </StyledHome>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport SideBar from \"../../components/SideBar/index\";\r\nimport { ReactTitle } from \"react-meta-tags\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAbout = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  .wrapper-about-me {\r\n    width: 30%;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .wrapper-about-me {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default About => {\r\n  return (\r\n    <StyledAbout >\r\n      <ReactTitle title={`About |  A little Hirany`} />\r\n      <div className=\"wrapper-about-me\">\r\n        <SideBar className=\"sidebar\" />\r\n      </div>\r\n    </StyledAbout>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport * as contentful from 'contentful'\r\n\r\nconst client = contentful.createClient({\r\n      space: \"zttx8n98lc3r\",\r\n      accessToken: \"AGjnCQHwzRIWOr7e9-kn8PLMMd0cWnRCXRjiNl_YHrY\"\r\n});\r\n\r\nconst usePost = (cat, title) => {\r\n  const [post, setPost] = useState(-1);\r\n\r\n  function replaceText(str) {\r\n    return str.split(\"-\").join(\" \");\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async (cat, title) => {\r\n      const data = await client.getEntries({\r\n        order: \"sys.updatedAt\",\r\n        content_type: \"blogPost\",\r\n        \"fields.category\": cat,\r\n        \"fields.titleUrl\": replaceText(title),\r\n      });\r\n      data.total ? setPost(data.items[0]) : setPost(-1)\r\n    })(cat, title);\r\n  }, [cat, title]);\r\n\r\n  return post;\r\n};\r\n\r\nexport default usePost;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    letter-spacing: 0.03em;\r\n    &-cat {\r\n      color: #d03b39;\r\n      opacity: 0.7;\r\n      text-align: center;\r\n    }\r\n    &-title {\r\n      text-align: center;\r\n      align-self: center;\r\n      font-family: BeVietNam, serif;\r\n      font-size: 45px;\r\n      font-weight: 400;\r\n      width: fit-content;\r\n      color: black;\r\n      text-align: center;\r\n    }\r\n    &-content {\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n      letter-spacing: -0.01em;\r\n      font-family: BeVietNam, sans-serif;\r\n      -webkit-font-smoothing: antialiased;\r\n      &-img {\r\n        width: 70%;\r\n        margin: 20px auto;\r\n        border-bottom: none !important;\r\n        div {\r\n          font-size: 12px;\r\n          color: #4e4c48;\r\n          margin-top: -5px;\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n    &-date {\r\n      text-align: center;\r\n      font-size: 13px;\r\n      line-height: 30px;\r\n      letter-spacing: 0.08em;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .card-content-img {\r\n      width: 100%;\r\n    }\r\n    .card-title {\r\n      line-height: 40px;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport StyledPostCard from \"./styledPostCard\";\r\nimport moment from \"moment\";\r\nimport { BLOCKS } from \"@contentful/rich-text-types\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport filtersTitles from \"../../utilities/index.js\";\r\nimport 'moment/locale/vi';\r\n\r\nconst Post = ({ fields }) => {\r\n  const formatTime = date => moment(date).locale('vi').format(\"DD/MM/YYYY HH:mm\");\r\n\r\n  const options = {\r\n    // Render image\r\n    renderNode: {\r\n      [BLOCKS.EMBEDDED_ASSET]: node => {\r\n        let { title, file } = node.data.target.fields;\r\n        return (\r\n          <div className=\"card-content-img mt-20 mb-20\">\r\n            <img alt={file.name} src={file.url} />\r\n            <div>{title}</div>\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    renderText: text =>\r\n      text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br key={i} />, text])\r\n  };\r\n\r\n  return (\r\n    <StyledPostCard className=\"mb-40 \">\r\n      <div className=\"card\">\r\n        <a className=\"card-title mb-10\" href=\"/\">\r\n          {fields.title}\r\n        </a>\r\n        <b className=\"card-cat mb-10 regular\">\r\n          {filtersTitles(\r\n            fields.category.charAt(0).toUpperCase() + fields.category.slice(1)\r\n          )}\r\n        </b>\r\n        <span className=\"card-date small mb-30\">\r\n          {formatTime(fields.createDate)}\r\n        </span>\r\n        <div className=\"card-content\">\r\n          {documentToReactComponents(fields.content, options)}\r\n        </div>\r\n        {/* <a className=\"mt-20 small\">đọc thêm></a> */}\r\n        {/* <div className=\"card-footer mt-40\">footer</div> */}\r\n      </div>\r\n    </StyledPostCard>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport usePost from \"../../hooks/usePost\";\r\nimport Post from \"../../components/Post/\";\r\nimport SideBar from \"../../components/SideBar/index\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst StyledHome = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  .posts {\r\n    width: 65%;\r\n  }\r\n  .about-content {\r\n    display: none;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    .about-content {\r\n      display: none;\r\n    }\r\n    .posts {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlogPost = () => {\r\n  let { cat, title } = useParams();\r\n\r\n  const post = usePost(cat, title);\r\n\r\n  console.log(post)\r\n\r\n  const Posts = post =>\r\n    post !== -1 ? (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"description\" content=\"Lorem ipsum\" />\r\n          <meta\r\n            name=\"robots\"\r\n            content=\"max-snippet:-1, max-image-preview:large, max-video-preview:-1\"\r\n          />\r\n          <link rel=\"canonical\" href=\"https://hirany.netlify.com\" />\r\n          <meta property=\"og:locale\" content=\"en_US\" />\r\n          <meta property=\"og:type\" content=\"website\" />\r\n          <meta property=\"og:title\" content={`A little Hirany | ${post.fields.title}`} />\r\n          <meta property=\"og:description\" content={post.fields.title} />\r\n          <meta property=\"og:url\" content=\"https://hirany.netlify.com\" />\r\n          <meta property=\"og:site_name\" content=\"A little Hirany\" />\r\n          <meta property=\"og:image:width\" content=\"1280\" />\r\n          <meta property=\"og:image:height\" content=\"720\" />\r\n        </Helmet>\r\n        <Post fields={post.fields} />\r\n      </div>\r\n    ) : (\r\n      <div className=\"text-progress\">Đang tìm, đợi chút nha :></div>\r\n    );\r\n  useEffect(() => {}, [post]);\r\n\r\n  return (\r\n    <StyledHome c>\r\n      <div className=\"posts\">{Posts(post)}</div>\r\n      <div className=\"about-content\">\r\n        <SideBar />\r\n      </div>\r\n    </StyledHome>\r\n  );\r\n};\r\nexport default BlogPost;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../pages/Home/\";\r\nimport About from \"../pages/About/\";\r\nimport BlogPost from \"../pages/Post\";\r\nimport React from \"react\";\r\n\r\nexport default Router => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      {/* both /roster and /roster/:number begin with /roster */}\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/category/:cat\" component={Home} />\r\n      <Route exact path=\"/:cat/:title\" component={BlogPost} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { Component, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n    state = {\r\n        lightTheme: true\r\n    }\r\n\r\n    toggleTheme = () => {\r\n        this.setState({ islightTheme: !this.state.lightTheme });\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme }}>\r\n            {children}\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeContextProvider;","import React, { useEffect, useState } from \"react\";\r\nimport StyledApp from \"./styledApp\";\r\nimport \"../assets/scss/common.scss\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faSearch, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Router from \"../router/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport ThemeContextProvider from \"./ThemeContext\";\r\n\r\nconst DropdownNavKeyframes = keyframes`\r\n  0% {\r\n    height: 0px;\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    height: 160px;\r\n}`;\r\n\r\nconst UnDropdownNavKeyframes = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    height: 160px;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    height: 0px;\r\n}`;\r\n\r\nlibrary.add(fab, faSearch, faBars);\r\n\r\nconst styledDropDown = styled.div``;\r\n\r\nconst DropDownAnimation = styled.div`\r\n  animation: ${DropdownNavKeyframes} 1s linear 0s;\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst DropUpAnimation = styled.div`\r\n  animation: ${UnDropdownNavKeyframes} 1s linear 0s;\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst NavigateList = [\r\n  { name: \"CODING\", cat: \"code\", path: \"/category/code\" },\r\n  { name: \"UI/UX\", cat: \"uiux\", path: \"/category/uiux\" },\r\n  { name: \"NHẢM NHÍ\", cat: \"life\", path: \"/category/life\" },\r\n  { name: \"PHIM ẢNH\", cat: \"movie\", path: \"/category/movie\" },\r\n  { name: \"ABOUT\", cat: \"about\", path: \"/about\" }\r\n];\r\n\r\nfunction App(props) {\r\n  const [isDropDown, setDropDown] = useState(\"start\");\r\n  const [DropDownAni, setDropDownAni] = useState(styledDropDown);\r\n\r\n  useEffect(() => {\r\n    /*eslint-disabled-next-line*/\r\n    if (isDropDown === false)\r\n      setDropDownAni(DropDownAnimation);\r\n    /*eslint-disabled-next-line*/ \r\n    else if (isDropDown === true)\r\n      setDropDownAni(DropUpAnimation);\r\n    else setDropDownAni(styled.div``);\r\n  }, [isDropDown]);\r\n\r\n  const isPickCat = cat => {\r\n    if (window.location.pathname.indexOf(cat) !== -1)\r\n      return { color: \"#e13d3d\" };\r\n    return;\r\n  };\r\n\r\n  const NavigateComp = NavigateList.map((item, index) => (\r\n    <a\r\n      key={index}\r\n      className=\"ml-20\"\r\n      href={item.path}\r\n      style={isPickCat(item.cat)}\r\n    >\r\n      {item.name}\r\n    </a>\r\n  ));\r\n\r\n  // useEffect(()=> {\r\n  //   console.log(path())\r\n  // },[])\r\n  // console.log(displayMobileNav, setDisplayMobieNav);\r\n  return (\r\n    <ThemeContextProvider>\r\n      <StyledApp className=\"mt-40\">\r\n        <header>\r\n          <span>\r\n            <Link className=\"logo\" to=\"/\">\r\n              A LITTLE HIRANY\r\n            </Link>\r\n          </span>\r\n          <nav className=\"navbar mt-10\">\r\n            {NavigateComp}\r\n            <a href=\"/\" className=\"ml-20\">\r\n              <h3>\r\n                <FontAwesomeIcon icon=\"search\" />\r\n              </h3>\r\n            </a>\r\n          </nav>\r\n          <nav className=\"mobile-navbar mt-10\">\r\n            <span onClick={() => setDropDown(!isDropDown)} className=\"co-red\">\r\n              <FontAwesomeIcon icon=\"bars\" className=\"mr-5 \" />\r\n              MENU\r\n            </span>\r\n            <a href=\"/\" className=\"ml-20\">\r\n              <h3>\r\n                <FontAwesomeIcon icon=\"search\" />\r\n              </h3>\r\n            </a>\r\n          </nav>\r\n          <div className=\"border\"></div>\r\n          <DropDownAni className=\"mt-10 mobile-navbar-dropdown\">\r\n            {NavigateComp}\r\n          </DropDownAni>\r\n        </header>\r\n        <div className=\"mt-20\">\r\n          <Router />\r\n        </div>\r\n      </StyledApp>\r\n    </ThemeContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './layouts/';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './fonts/BeVietNam.ttf';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}